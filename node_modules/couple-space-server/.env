# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

VITE_DATABASE_URL="postgres://u4uf5dh910b1sd:p444ac011c3ea7f25cf8043bc8745548b67634f872a11ba160289fb2dca14f2c1@c9uss87s9bdb8n.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/dd5ht5bkp5c8ui"
VITE_DATABASE_PASSWORD="p444ac011c3ea7f25cf8043bc8745548b67634f872a11ba160289fb2dca14f2c1"
# Add local database URL (using the password we just set)
#DATABASE_URL="postgresql://postgres:P@$$w0rd@localhost:5432/couple_space_dev"

VITE_DB_USER=u4uf5dh910b1sd
VITE_DB_HOST=c9uss87s9bdb8n.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com
VITE_DB_NAME=dd5ht5bkp5c8ui
VITE_DB_PASSWORD=p444ac011c3ea7f25cf8043bc8745548b67634f872a11ba160289fb2dca14f2c1
VITE_DB_PORT=5432

node_modules/
.env
*.log

window.process = {
  env: {
    NODE_ENV: import.meta.env.MODE,
    ...Object.fromEntries(
      Object.entries(import.meta.env).map(([key, value]) => [
        key.replace('VITE_', ''),
        value
      ])
    )
  }
} as any;

